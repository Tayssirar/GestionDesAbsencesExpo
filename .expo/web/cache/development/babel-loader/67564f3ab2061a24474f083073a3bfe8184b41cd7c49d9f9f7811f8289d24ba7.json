{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Identifier() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://your-server-ip:3000/login', {\n          email: email,\n          password: password\n        });\n        console.log('Login successful:', response.data);\n      } catch (error) {\n        console.error('Login error:', error.message);\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \" Login\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email.\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), _jsx(Text, {\n      children: \" Password\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password.\",\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.loginBtn,\n        children: \"LOGIN\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TextInput","Text","TouchableOpacity","styles","jsx","_jsx","jsxs","_jsxs","Identifier","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_ref","_asyncToGenerator","response","axios","post","console","log","data","error","message","apply","arguments","style","container","children","inputView","placeholder","onChangeText","loginBtn"],"sources":["C:/Users/tayss/GestionAbsences/composant/identifier.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Text, TouchableOpacity} from 'react-native';\r\nimport {styles} from \"../styles/styles\"\r\n\r\nexport default function Identifier() {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://your-server-ip:3000/login', {\r\n        email,\r\n        password,\r\n      });\r\n      // Handle success response\r\n      console.log('Login successful:', response.data);\r\n      // You can handle navigation or other actions upon successful login\r\n    } catch (error) {\r\n      console.error('Login error:', error.message);\r\n      // Handle login error, show message to the user, etc.\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <View style={styles.container}>\r\n        <Text > Login</Text>\r\n        <View style={styles.inputView}>\r\n        <TextInput style={styles.TextInput} \r\n        placeholder=\"Email.\" onChangeText={(email) => setEmail(email)}/>\r\n        </View>\r\n        <Text > Password</Text>\r\n        <View style={styles.inputView}>\r\n        <TextInput style={styles.TextInput} placeholder=\"Password.\"  onChangeText={(password) => setPassword(password)}\r\n        />\r\n        </View>\r\n      <TouchableOpacity> \r\n      <Text  style={styles.loginBtn} >LOGIN</Text> \r\n      </TouchableOpacity> \r\n      </View>\r\n\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAAQC,MAAM;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAACC,IAAI,CAAC,kCAAkC,EAAE;UACpEX,KAAK,EAALA,KAAK;UACLI,QAAQ,EAARA;QACF,CAAC,CAAC;QAEFQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAEjD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACC,OAAO,CAAC;MAE9C;IACF,CAAC;IAAA,gBAbKV,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAahB;EAGD,OAEIvB,KAAA,CAACR,IAAI;IAACgC,KAAK,EAAE5B,MAAM,CAAC6B,SAAU;IAAAC,QAAA,GAC5B5B,IAAA,CAACJ,IAAI;MAAAgC,QAAA,EAAE;IAAM,CAAM,CAAC,EACpB5B,IAAA,CAACN,IAAI;MAACgC,KAAK,EAAE5B,MAAM,CAAC+B,SAAU;MAAAD,QAAA,EAC9B5B,IAAA,CAACL,SAAS;QAAC+B,KAAK,EAAE5B,MAAM,CAACH,SAAU;QACnCmC,WAAW,EAAC,QAAQ;QAACC,YAAY,EAAE,SAAAA,aAACxB,KAAK;UAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC;QAAA;MAAC,CAAC;IAAC,CAC1D,CAAC,EACPP,IAAA,CAACJ,IAAI;MAAAgC,QAAA,EAAE;IAAS,CAAM,CAAC,EACvB5B,IAAA,CAACN,IAAI;MAACgC,KAAK,EAAE5B,MAAM,CAAC+B,SAAU;MAAAD,QAAA,EAC9B5B,IAAA,CAACL,SAAS;QAAC+B,KAAK,EAAE5B,MAAM,CAACH,SAAU;QAACmC,WAAW,EAAC,WAAW;QAAEC,YAAY,EAAE,SAAAA,aAACpB,QAAQ;UAAA,OAAKC,WAAW,CAACD,QAAQ,CAAC;QAAA;MAAC,CAC9G;IAAC,CACI,CAAC,EACTX,IAAA,CAACH,gBAAgB;MAAA+B,QAAA,EACjB5B,IAAA,CAACJ,IAAI;QAAE8B,KAAK,EAAE5B,MAAM,CAACkC,QAAS;QAAAJ,QAAA,EAAE;MAAK,CAAM;IAAC,CAC1B,CAAC;EAAA,CACb,CAAC;AAGb"},"metadata":{},"sourceType":"module","externalDependencies":[]}